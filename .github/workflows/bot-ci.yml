name: bot-ci
on:
  push:
    branches:
      - main
      - dev
  workflow_dispatch:
    inputs:
      aws_region:
        description: 'AWS Region'
        type: choice
        options:
          - ' '
          - eu-west-1
          - us-east-1

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

permissions:
  pull-requests: write
  contents: write

env:
  AWS_REGION_DEFAULT: eu-west-1
  DOCKER_REGISTRY: 700935310038.dkr.ecr.eu-west-1.amazonaws.com
  DOCKER_NAMESPACE: tamir

jobs:
  build-docker:
    runs-on: ['self-hosted', 'Linux' , 'X64']
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.aws_region || env.AWS_REGION_DEFAULT }}
      
      - name: Set Env Varibles
        run: |
          version=$(cat bot/VERSION)
          echo "SERVICE_VERSION=${version}" >> $GITHUB_ENV
          echo "DOCKER_IMG=${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_NAMESPACE }}/${{ github.ref_name }}/bot:${version}" >> $GITHUB_ENV
      
      - name: Docker Build
        run: |
          docker build -f bot/Dockerfile -t ${{ env.DOCKER_IMG }} .
      
      - uses: int128/create-ecr-repository-action@v1
        if: github.ref_name == 'main'
        with:
          repository: ${{ env.DOCKER_NAMESPACE }}/${{ github.ref_name }}/bot

      - name: Docker Push
        if: github.ref_name == 'main'
        run: |
          aws ecr get-login-password --region ${{ inputs.aws_region || env.AWS_REGION_DEFAULT }} | docker login \
           --username AWS --password-stdin ${{ env.DOCKER_REGISTRY }}
          docker push ${{ env.DOCKER_IMG }}

  update-version:
    needs: [build-docker]
    runs-on: ['self-hosted', 'Linux' , 'X64']
    steps:
      - uses: actions/checkout@v3
        with:
          github_token: ${{ env.GITHUB_TOKEN }}


      - name: Install yq
        run: |
          sudo curl -sS -L https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64 -o /usr/bin/yq \
          && sudo chmod +x /usr/bin/yq
      
      - name: Update Helm
        run: |
          yq -i '.appVersion = "${{ env.SERVICE_VERSION }}"' devops/helm/bot/Chart.yaml

      - name: Increment Version
        run: |
          devops/scripts/increment-version.sh bot VERSION

      - name: Git Push
        run: |
          chmod u+x devops/scripts/git-push.sh
          devops/scripts/git-push.sh "bot/VERSION devops/helm/bot/Chart.yaml devops/helm/bot/values.yaml" \
          ${{ github.ref_name }} '[ci skip] updated bot version'
        

        